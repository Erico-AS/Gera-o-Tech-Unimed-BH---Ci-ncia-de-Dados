# -*- coding: utf-8 -*-
"""Analise exploratória.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YOzBI7pgcAa_vOcPrmsYcmt647wBkENL
"""

import pandas as pd
import matplotlib.pyplot as plt
plt.style.use("seaborn")

from google.colab import files
arq = files.upload()

df = pd.read_excel("AdventureWorks.xlsx")

df.head()

df.sample()

df.shape

df.dtypes

#Receita total
df["Valor Venda"].sum()

#Qual o custo total?
df["Custo"] = df["Custo Unitário"] * df["Quantidade"]
df["Custo"]

#Custo total
round(df["Custo"].sum(), 1)
# round = arredondar

#Lucro Total
df["Lucro"] = df["Valor Venda"] - df["Custo"]
round(df["Lucro"].sum(),1)

#Tempo de entrega
df["Tempo de entrega"] = df["Data Envio"] - df["Data Venda"]
df["Tempo de entrega"]

"""Média de entrega de cada marca"""

df["Tempo de entrega"] = (df["Data Envio"] - df["Data Venda"]).dt.days

df.groupby("Marca")["Tempo de entrega"].mean()

df["Tempo de entrega"].dtypes

"""Saber valores vazios"""

df.isnull().sum()

"""Lucro por ano e por marca"""

#Lucros por ano em cada marca
df.groupby([df["Data Venda"].dt.year, "Marca"])["Lucro"].sum()

#Tirar notação científica
pd.options.display.float_format = '{:20,.2f}'.format

lucro_ano = df.groupby([df["Data Venda"].dt.year, "Marca"])["Lucro"].sum()
lucro_ano

#Resetando o index
lucro_ano = df.groupby([df["Data Venda"].dt.year, "Marca"])["Lucro"].sum().reset_index()
lucro_ano

#Qual o total de produtos vendidos
df.groupby("Produto")["Quantidade"].sum().sort_values(ascending = False)

#Grafico total de produtos vendidos
df.groupby("Produto")["Quantidade"].sum().sort_values(ascending = False).plot.barh()
plt.xlabel("Total")
plt.ylabel("Produto")
plt.title("Total de produtos vendidos");

df.groupby([df["Data Venda"].dt.year])["Lucro"].sum().plot.barh(title = "Lucro por ano")
plt.xlabel("Lucro")
plt.ylabel("Ano");

#Retornar vendas apenas de 2009
df_2009 = df[df["Data Venda"].dt.year == 2009]
df_2009.head(5)

#Relação de mês e lucro
df_2009.groupby(df["Data Venda"].dt.month)["Lucro"].sum().plot(title="Mês x Lucro")
plt.ylabel("Lucro")
plt.xlabel("Mês");

#Marca e Lucro
df_2009.groupby("Marca")["Lucro"].sum().plot.bar(title="Marca x Lucro")
plt.ylabel("Lucro")
plt.xlabel("Marca")
plt.xticks(rotation = 'horizontal'); #girar a legenda do eixo 'x'

#Classe x Lucro
df_2009.groupby("Classe")["Lucro"].sum().plot.bar(title="Classe x Lucro")
plt.ylabel("Lucro")
plt.xlabel("Classe");
plt.xticks(rotation = "horizontal");

"""**Analises estatísticas**"""

df["Tempo de entrega"].describe()

#grafico boxplot
plt.boxplot(df["Tempo de entrega"]);

#Histograma
plt.hist(df["Tempo de entrega"])
plt.title("Tempo de entrega");

#Tempo de envio minimo
df["Tempo de entrega"].min()

#Tempo de entrega máximo
df["Tempo de entrega"].max()

#Linha com tempo de entrega igual a 20
df[df["Tempo de entrega"] == 20]

df.to_csv("df_vendas.csv", index = False)