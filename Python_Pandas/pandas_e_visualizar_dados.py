# -*- coding: utf-8 -*-
"""Pandas e visualizar dados.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PgtJ5e6-B8e88udvebFhFJCF5WN98ft0
"""

import pandas as pd

df = pd.read_excel("/content/drive/MyDrive/Agosto.xlsx")

df.head()

df.groupby("Dia")["Assistência"].mean()

quarta = df.loc[df["Dia"] == "quarta"]

quarta

quarta.describe()

df.groupby("Dia")["Assistência"].sum()

df.dtypes

#Para alterar tipo de dado
#df["coluna"] = df["coluna"].astype("novo tipo")

"""#Valores **faltantes** **negrito**"""

#Verificar se existem valores nulos
#isnull = é nulo?
df.isnull().sum()
#pegando os valores nulos (se existirem) e somar

#Substituir valores vazios
                                #Aqui pode colocar outros valores para substituir
#                                                     |
#df["coluna a ser substituida"].fillna(df["coluna para puxar valores"].mean(), inplace = true)
#                                                                       |      inplace = mudar na memória
                                        #Por exemplo, substituir pela média

#.dropna(inplace = true) -> apagar linhas com valores nulos

#Apagar nulos com base em uma coluna

#.dropna(subset = ["Coluna base"], inplace = true)

#Remover em todas as colunas

#.dropna(how = "all", inplace = true)

"""# ***Criar novas colunas***"""

df["Média Quarta"[len(quarta) - 1]] = quarta["Assistência"].sum() / len(quarta)

df["Média Quarta"]



"""# ***Retorno de valores (max, min)***"""

#df["Coluna"].max()
#retorna maior valor da coluna

#df["Coluna"].min()
#Retorna menor valor da coluna

#df.nlargest(qtd_linhas,"Coluna")
#Retorna um conjunto dos maiores valores

#df.nsmallest(qtd_linhas,"Coluna")
#Retorna um conjunto dos menores valores

#.sort_values("Coluna", ascending = false)
# Ordenar vals          maior para menor



"""# **Datas**"""

df.dtypes

#data já está como 'datetime'

#dt.year = extrair ano
#dt.month = extrair mês
#dt.day = extrair dia



"""# ***Vizualização de dados***"""

#Alterar caracteristicas
import matplotlib.pyplot as plt # -> importar biblioteca
#plot.pie() 'ou' plot.barh(title = "xxx", color = "aaa")

#grafico de barras horizontais
#value_counts(ascending = true).plot.barh

#grafico de pizza
#.plot.pie

#Alterar nomes dos eixos
#plt.xlabel = ("x")
#plt.ylabel = ("y")

#Grafico de linha
#.plot

#Mudar estilo
#plt.sytle.use("nome do estilo") -> estilos no site matplotlib

#Legenda para gráficos
#.legend()

#Marcadores no gráfico
#.plot(maker = "v"*)    '*' = exemplo apenas

"""**Histograma**"""

plt.ylabel = ("Quantidade")

#Histograma
plt.hist(df["Assistência"], color = "green");

sabado = df.loc("Dia" == "sabado")

#Grafico com pontos dispersos
plt.scatter(x = df["Dia"], y = df["Assistência"])

#Salvar png
#plt.savefig("titulo")

